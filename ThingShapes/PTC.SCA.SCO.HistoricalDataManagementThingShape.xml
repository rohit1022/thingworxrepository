<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b222"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1053"
 universal="password">
    <ThingShapes>
        <ThingShape
         aspect.isEditableExtensionObject="false"
         aspect.isExtension="true"
         className=""
         description="Thing Shape that holds all the necessary properties and services for manipulating historical data definitions in the database {PTC.SCA.SCO.HistoricalDataManagementThingShape}"
         documentationContent=""
         homeMashup=""
         lastModifiedDate="2020-03-30T21:09:16.372+05:30"
         name="PTC.SCA.SCO.HistoricalDataManagementThingShape"
         projectName=""
         tags="PTC:OA;PTC:sco-common-layer">
            <PropertyDefinitions></PropertyDefinitions>
            <ServiceDefinitions>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="***DEPRECATED-OA3*** This service has been replaced by GetHistoricalData and will be deleted in a future release."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="FilterHistoricalData">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.HistoricalData"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="JSON"
                         description=""
                         name="filter"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="limit"
                         ordinal="3"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="offset"
                         ordinal="2"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetHistoricalData">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.HistoricalData"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="JSON"
                         description=""
                         name="filter"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="limit"
                         ordinal="3"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="offset"
                         ordinal="2"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetHistoricalDataDBInfo">
                    <ResultType
                     baseType="JSON"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions></ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service that deletes historical data from the Operator Advisor historical data database table. Takes as an input parameter the dataAgeInDays to determine the maximum age for data, and purges everything that is older."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="PurgeHistoricalData">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="INTEGER"
                         description=""
                         name="dataAgeInDays"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
            </ServiceDefinitions>
            <EventDefinitions></EventDefinitions>
            <ServiceMappings></ServiceMappings>
            <ServiceImplementations>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="FilterHistoricalData">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        filter: filter,
                                        dataShapeName: "PTC.SCA.SCO.HistoricalData",
                                        offset: offset,
                                        limit: limit
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetHistoricalData">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        filter: filter,
                                        dataShapeName: "PTC.SCA.SCO.HistoricalData",
                                        offset: offset,
                                        limit: limit
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetHistoricalDataDBInfo">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var dbInfo = {
                                        dbInfo: [
                                            {dataShapeName: "PTC.SCA.SCO.HistoricalData", indexedFields: [{name:"ReferenceKey"},{name:"DataShapeName"},{name:"FieldName"}], fields: [{name:"Value",length:4000}]},
                                        ]
                                    };
                                    
                                    var result = dbInfo;
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="PurgeHistoricalData">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var date = new Date();
                                    date.setDate(date.getDate() - dataAgeInDays);
                                    
                                    var timeStampFilter = {
                                    	filters: {
                                            fieldName: "TimeStamp",
                                            type: "LE",
                                            value: date
                                        }
                                    };
                                    
                                    var dataToPurge = me.GetHistoricalData({
                                    	filter: timeStampFilter /* JSON */,
                                    	offset: undefined /* INTEGER */,
                                    	limit: undefined /* INTEGER */
                                    });
                                    
                                    var params = {};
                                    
                                    var tableLength = dataToPurge.rows.length;
                                    for (var x=0; x < tableLength; x++) {
                                        var row = dataToPurge.rows[x];
                                        params = {
                                            UID: row.UID.toString(),
                                            dataShapeName: "PTC.SCA.SCO.HistoricalData"
                                        };
                                        Things[me.GetDatabaseThingName()].Delete(params);
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
            </ServiceImplementations>
            <Subscriptions></Subscriptions>
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="PTC.Factory.MachineVisibility"
                     type="Organization"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <InstanceRunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </InstanceRunTimePermissions>
        </ThingShape>
    </ThingShapes>
</Entities>
