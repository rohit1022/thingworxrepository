<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b222"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1053"
 universal="password">
    <ThingShapes>
        <ThingShape
         aspect.isEditableExtensionObject="false"
         aspect.isExtension="true"
         className=""
         description="The thing shape for Work Definition Utils ThingShape {PTC.SCA.SCO.WorkDefinitionUtilsThingShape}"
         documentationContent=""
         homeMashup=""
         lastModifiedDate="2020-03-19T18:16:16.065+05:30"
         name="PTC.SCA.SCO.WorkDefinitionUtilsThingShape"
         projectName=""
         tags="PTC:OA">
            <PropertyDefinitions></PropertyDefinitions>
            <ServiceDefinitions>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetCADList">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkDefinitionIllustration"
                     baseType="INFOTABLE"
                     description="Returns Consolidated list of 3D type illustrations and related documents for a given workdefinition."
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetCADUrl">
                    <ResultType
                     baseType="HYPERLINK"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetChildrenWorkDefinitionsWithThumbnails">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkDefinitionWithThumbnail"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description="This will be ParentUID"
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to set default values for IllustrationURL, IllustrationName and Type for operations without any representations"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetDefaultWorkDefinitionIllustration">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkDefinitionIllustration"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetImageList">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkDefinitionIllustration"
                     baseType="INFOTABLE"
                     description="Returns Consolidated list of 2D type illustrations and related documents for a given workdefinition."
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetImageUrl">
                    <ResultType
                     baseType="HYPERLINK"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="IMPORTANT: This service is not a supported API, it is for internal use only!"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetMediaList">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkDefinitionIllustration"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="Type"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="IMPORTANT: This service is not a supported API, it is for internal use only!"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetMediaUrl">
                    <ResultType
                     baseType="HYPERLINK"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="Type"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetVideoList">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkDefinitionIllustration"
                     baseType="INFOTABLE"
                     description="Returns Consolidated list of VIDEO type illustrations and related documents for a given workdefinition."
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetVideoUrl">
                    <ResultType
                     baseType="HYPERLINK"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to return true if Media List returns more than 1 row"
                 isAllowOverride="false"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="IsMultipleMedia">
                    <ResultType
                     baseType="BOOLEAN"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="INFOTABLE"
                         description=""
                         name="MediaListTable"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="false"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="ToggleDefaultImageVisibility">
                    <ResultType
                     baseType="BOOLEAN"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="MediaUrl"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to update a work definition step as completed"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="UpdateWorkDefinitionStatusAsCompleted">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkDefinitionExecutionStatus"
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkDefinitionUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
            </ServiceDefinitions>
            <EventDefinitions></EventDefinitions>
            <ServiceMappings></ServiceMappings>
            <ServiceImplementations>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetCADList">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result = me.GetMediaList({ WorkDefinitionUID: WorkDefinitionUID, Type: "3D" });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetCADUrl">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result = me.GetMediaUrl({ WorkDefinitionUID: WorkDefinitionUID, Type: "3D" });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetChildrenWorkDefinitionsWithThumbnails">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    // childrenInfotable: INFOTABLE dataShape: "PTC.SCA.SCO.WorkDefinition"
                                        var children = Things[me.GetProductionOrderManager()].GetChildrenWorkDefinitions({
                                        	WorkDefinitionUID: WorkDefinitionUID /* STRING */
                                        });
                                    
                                        var params = {
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "PTC.SCA.SCO.WorkDefinitionWithThumbnail"
                                        };
                                        // result: INFOTABLE dataShape: "PTC.SCA.SCO.WorkDefinitionWithThumbnail"
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                        if (children && children !== null) {
                                        	var tableLength = children.rows.length;
                                    
                                        	for (var x = 0; x < tableLength; x++) {
                                        		var childUID = children.getRow(x).getValue("UID");
                                        		// result: INFOTABLE dataShape: "PTC.SCA.SCO.WorkDefinition"
                                        		var workDefinition = Things[me.GetProductionOrderManager()].GetWorkDefinition({
                                        			UID: childUID /* STRING */
                                        		});
                                    
                                        		if (workDefinition && workDefinition !== null && workDefinition.rows.length === 1) {
                                        			// thumbnailResult: INFOTABLE dataShape: "PTC.SCA.SCO.WorkDefinitionIllustration"
                                        			var thumbnails = Things[me.GetProductionOrderManager()].GetWorkDefinitionThumbnail({
                                        				WorkDefinitionUID: childUID /* STRING */
                                        			});
                                        			var illustrationName, illustrationURL, illustrationType, illustrationUID;
                                        			if (thumbnails && thumbnails !== null && thumbnails.rows.length > 0) {
                                        				var thumbnail = thumbnails.getRow(0);
                                        				illustrationName = thumbnail.getValue("IllustrationName");
                                        				illustrationURL = thumbnail.getValue("IllustrationURL");
                                        				illustrationType = thumbnail.getValue("Type");
                                        				illustrationUID = thumbnail.getValue("UID");
                                        			} else {
                                        				// result: INFOTABLE dataShape: "PTC.SCA.SCO.WorkDefinitionIllustration"
                                        				var workDefinitionIllustrationWithDefaultValues = me.GetDefaultWorkDefinitionIllustration({
                                        					WorkDefinitionUID: childUID /* STRING */
                                        				});
                                        				var workDefinitionIllustrationWithDefaultValue = workDefinitionIllustrationWithDefaultValues.getRow(0);
                                        				illustrationName = workDefinitionIllustrationWithDefaultValue.getValue("IllustrationName");
                                        				illustrationURL = workDefinitionIllustrationWithDefaultValue.getValue("IllustrationURL");
                                        				illustrationType = workDefinitionIllustrationWithDefaultValue.getValue("Type");
                                        				illustrationUID = workDefinitionIllustrationWithDefaultValue.getValue("WorkDefinitionUID");
                                        			}
                                    
                                        			var completedStatus = false;
                                        			if (children.getRow(x).getValue("PTC_SCA_SCO_WorkDefinitionExecutionStatus_Name") === "Completed") {
                                        				completedStatus = true;
                                        			}
                                        			var row = {
                                        				"UID": children.getRow(x).getValue("UID"),
                                        				"IllustrationUID": illustrationUID,
                                        				"IllustrationName": illustrationName,
                                        				"IllustrationURL": illustrationURL,
                                        				"Type": illustrationType,
                                        				"SequenceNumber": children.getRow(x).getValue("SequenceNumber"),
                                        				"IsCompleted": completedStatus
                                        			};
                                        			result.AddRow(row);
                                        		}
                                        	}
                                        }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetDefaultWorkDefinitionIllustration">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "PTC.SCA.SCO.WorkDefinitionIllustration"
                                        };
                                    
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(PTC.SCA.SCO.WorkDefinitionIllustration)
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                    
                                        row = {
                                        	"WorkDefinitionUID": WorkDefinitionUID,
                                        	"IllustrationURL": "/Thingworx/MediaEntities/PTC.SCA.SCO.DefaultWorkDefinitionThumbnailIcon",
                                        	"IllustrationName": "default_thumbnail.gif",
                                        	"Type": "THUMBNAIL"
                                        };
                                        result.AddRow(row);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetImageList">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result = me.GetMediaList({ WorkDefinitionUID: WorkDefinitionUID, Type: "2D" });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetImageUrl">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result = me.GetMediaUrl({ WorkDefinitionUID: WorkDefinitionUID, Type: "2D" });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetMediaList">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var typeFilter = {
                                        "filters": {
                                            "fieldName":"Type",
                                            "type":"EQ",
                                            "value":Type
                                        },
                                        "sorts": [
                                            {
                                              "fieldName": "UID",
                                              "isAscending": false
                                            }
                                        ]
                                    };
                                    
                                    var result;
                                    if (WorkDefinitionUID !== undefined && WorkDefinitionUID !== null && WorkDefinitionUID !== '') {
                                       result = queryRelatedObjects(WorkDefinitionUID, typeFilter, "PTC.SCA.SCO.WorkDefinitionIllustration");
                                       var relatedDocumentsTable = queryRelatedObjects(WorkDefinitionUID, typeFilter, "PTC.SCA.SCO.WorkDefinitionRelatedDocument");
                                    
                                       for (var x=0; x < relatedDocumentsTable.rows.length; x++) {
                                           var row = relatedDocumentsTable.rows[x];
                                           // PTC.SCA.SCO.WorkDefinitionIllustration entry object
                                           var newEntry = new Object();
                                           newEntry.UID = row.UID;
                                           newEntry.Type = row.Type; // STRING
                                           newEntry.IllustrationURL = row.DocumentURL; // STRING
                                           newEntry.IllustrationName = row.DocumentName; // STRING
                                           newEntry.WorkDefinitionUID = row.WorkDefinitionUID; // LONG
                                           result.AddRow(newEntry);
                                       }
                                    
                                    logger.trace(result.toJSON());
                                    
                                    }
                                    
                                    function queryRelatedObjects(wdUid, filter, dataShapeName) {
                                        var query = getQuery(wdUid, filter, dataShapeName);
                                        return Things[me.GetProductionOrderManager()].GetWorkDefinitionRelatedObjects(query);
                                    }
                                    
                                    function getQuery(wdUid, filter, dataShapeName) {
                                        return {
                                            WorkDefinitionUID: wdUid,
                                            Filter: filter,
                                            dataShapeName: dataShapeName
                                        };
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetMediaUrl">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var typeFilter = {
                                        "filters": {
                                            "fieldName":"Type",
                                            "type":"EQ",
                                            "value":Type
                                        }
                                    };
                                    
                                    var result;
                                    if (WorkDefinitionUID !== undefined && WorkDefinitionUID !== null && WorkDefinitionUID !== '') {
                                       var illustrationsTable = queryRelatedObjects(WorkDefinitionUID, typeFilter, "PTC.SCA.SCO.WorkDefinitionIllustration");
                                       result = getURL(illustrationsTable, "IllustrationURL");
                                       if (! result) {
                                          var relatedDocumentsTable = queryRelatedObjects(WorkDefinitionUID, typeFilter, "PTC.SCA.SCO.WorkDefinitionRelatedDocument");
                                          result = getURL(relatedDocumentsTable, "DocumentURL");
                                       }
                                    }
                                    
                                    function queryRelatedObjects(wdUid, filter, dataShapeName) {
                                        var query = getQuery(wdUid, filter, dataShapeName);
                                        return Things[me.GetProductionOrderManager()].GetWorkDefinitionRelatedObjects(query);
                                    }
                                    
                                    function getQuery(wdUid, filter, dataShapeName) {
                                        return {
                                            WorkDefinitionUID: wdUid,
                                            Filter: filter,
                                            dataShapeName: dataShapeName
                                        };
                                    }
                                    
                                    function getURL(infoTable, urlFieldName) {
                                        var url;
                                        if (infoTable && 0 < infoTable.rows.length) {
                                            for (var i=0; i < infoTable.rows.length; ++i) {
                                                if (infoTable.rows[i].getStringValue(urlFieldName)) {
                                                    url = infoTable.rows[i].getStringValue(urlFieldName);
                                                    break;
                                                }
                                            }
                                        }
                                        return url;
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetVideoList">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result = me.GetMediaList({ WorkDefinitionUID: WorkDefinitionUID, Type: "VIDEO" });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetVideoUrl">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result = me.GetMediaUrl({ WorkDefinitionUID: WorkDefinitionUID, Type: "VIDEO" });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="IsMultipleMedia">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result = false;
                                    var tableLength = MediaListTable.rows.length;
                                    
                                    if (tableLength>1){
                                       result=true;
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="ToggleDefaultImageVisibility">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result =  MediaUrl === undefined;
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="UpdateWorkDefinitionStatusAsCompleted">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var statusInfotable = Things[me.GetProductionOrderManager()].GetWorkDefinitionExecutionStatuses();
                                    var filteredResult = statusInfotable.Find({
                                          Name: "Completed" 
                                    });
                                                                 
                                    if (filteredResult && filteredResult.getValue("UID")!==null) {                                       
                                       var params = {
                                          infoTableName : "InfoTable",
                                          dataShapeName : "PTC.SCA.SCO.WorkDefinition"
                                       };
                                       var workDefinitionResultInfotable = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                       var row = {
                                            "UID" : WorkDefinitionUID,
                                            "ExecutionStatus":  filteredResult.getValue("UID")
                                       };
                                       workDefinitionResultInfotable.AddRow(row);
                                       Things[me.GetProductionOrderManager()].UpdateWorkDefinitions({
                                           WorkDefinitions: workDefinitionResultInfotable
                                       });
                                    } else  {
                                        logger.warn("Execution status Completed does not exist");
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
            </ServiceImplementations>
            <Subscriptions></Subscriptions>
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <InstanceRunTimePermissions></InstanceRunTimePermissions>
        </ThingShape>
    </ThingShapes>
</Entities>
