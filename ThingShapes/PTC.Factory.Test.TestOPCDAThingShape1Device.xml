<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b222"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1053"
 universal="password">
    <ThingShapes>
        <ThingShape
         aspect.isEditableExtensionObject="false"
         aspect.isExtension="true"
         className=""
         description="Thing shape for Simulation Only fake data, simulate 1 Devices {PTC.Factory.Test.TestOPCDAThingShape1Device}"
         documentationContent="&lt;p&gt;&amp;nbsp;&lt;/p&gt; "
         homeMashup=""
         lastModifiedDate="2020-03-19T18:16:21.166+05:30"
         name="PTC.Factory.Test.TestOPCDAThingShape1Device"
         projectName="PTC.SCA.SCO.Common"
         tags="PTC:sca-sco-common;PTC:sca-common;PTC:ThingShape">
            <PropertyDefinitions></PropertyDefinitions>
            <ServiceDefinitions>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Browse the groups of a heirarchical namespace"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="BrowseGroups">
                    <ResultType
                     aspect.dataShape="IndustrialGroups"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="filter"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="path"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Browse the items of a heirarchical namespace"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="BrowseItems">
                    <ResultType
                     aspect.dataShape="IndustrialItems"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="filter"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="path"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
            </ServiceDefinitions>
            <EventDefinitions></EventDefinitions>
            <ServiceMappings></ServiceMappings>
            <ServiceImplementations>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="BrowseGroups">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description="Script"
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        infoTableName : "InfoTable",
                                        dataShapeName : "IndustrialGroups"
                                    };
                                    
                                    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(IndustrialGroups)
                                    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                    
                                    if(!path) {
                                        // IndustrialGroups entry object
                                        var newEntry1 = new Object();
                                        newEntry1.Parent = undefined;
                                        newEntry1.FullPath = "_System";
                                        newEntry1.Name = "_System";
                                    
                                        var newEntry2 = new Object();
                                        newEntry2.Parent = undefined;
                                        newEntry2.FullPath = "Channel1";
                                        newEntry2.Name = "Channel1";
                                    
                                        result.AddRow(newEntry1);
                                        result.AddRow(newEntry2);
                                    }
                                    
                                    if(path == "Channel1") {
                                    	var newEntry6 = new Object();
                                        newEntry6.Parent = "Channel1";
                                        newEntry6.FullPath = "Channel1._Statistics";
                                        newEntry6.Name = "_Statistics";
                                        
                                        var newEntry7 = new Object();
                                        newEntry7.Parent = "Channel1";
                                        newEntry7.FullPath = "Channel1._System";
                                        newEntry7.Name = "_System";
                                        
                                        var newEntry8 = new Object();
                                        newEntry8.Parent = "Channel1";
                                        newEntry8.FullPath = "Channel1.Device1";
                                        newEntry8.Name = "Device1";
                                        
                                        result.AddRow(newEntry6);
                                        result.AddRow(newEntry7);
                                        result.AddRow(newEntry8);
                                    }
                                    
                                    if(path == "Channel1.Device1") {
                                    	var newEntry9 = new Object();
                                        newEntry9.Parent = "Channel1.Device1";
                                        newEntry9.FullPath = "Channel1.Device1._System";
                                        newEntry9.Name = "_System";
                                        
                                        result.AddRow(newEntry9);
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="BrowseItems">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description="Script"
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        infoTableName : "InfoTable",
                                        dataShapeName : "IndustrialItems"
                                    };
                                    
                                    // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(IndustrialItems)
                                    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                    
                                    if(path == "Channel1._Statistics") {
                                        var newEntry1 = new Object();
                                        newEntry1.ReadOnly = false;
                                        newEntry1.Description = undefined;
                                        newEntry1.BaseType = "INTEGER";
                                        newEntry1.SourceType = "System.UInt32";
                                        newEntry1.Source = "Channel1._Statistics._FailedReads";
                                        newEntry1.Name = "_FailedReads";
                                        
                                        var newEntry2 = new Object();
                                        newEntry2.ReadOnly = false;
                                        newEntry2.Description = undefined;
                                        newEntry2.BaseType = "INTEGER";
                                        newEntry2.SourceType = "System.UInt32";
                                        newEntry2.Source = "Channel1._Statistics._FailedWrites";
                                        newEntry2.Name = "_FailedWrites";
                                        
                                        var newEntry3 = new Object();
                                        newEntry3.ReadOnly = false;
                                        newEntry3.Description = undefined;
                                        newEntry3.BaseType = "INTEGER";
                                        newEntry3.SourceType = "System.UInt32";
                                        newEntry3.Source = "Channel1._Statistics._MaxPendingReads";
                                        newEntry3.Name = "_MaxPendingReads";
                                        
                                        var newEntry4 = new Object();
                                        newEntry4.ReadOnly = false;
                                        newEntry4.Description = undefined;
                                        newEntry4.BaseType = "INTEGER";
                                        newEntry4.SourceType = "System.UInt32";
                                        newEntry4.Source = "Channel1._Statistics._MaxPendingWrites";
                                        newEntry4.Name = "_MaxPendingWrites";
                                        
                                        var newEntry5 = new Object();
                                        newEntry5.ReadOnly = false;
                                        newEntry5.Description = undefined;
                                        newEntry5.BaseType = "INTEGER";
                                        newEntry5.SourceType = "System.Int32";
                                        newEntry5.Source = "Channel1._Statistics._NextReadPriority";
                                        newEntry5.Name = "_NextReadPriority";
                                        
                                        var newEntry6 = new Object();
                                        newEntry6.ReadOnly = false;
                                        newEntry6.Description = undefined;
                                        newEntry6.BaseType = "INTEGER";
                                        newEntry6.SourceType = "System.UInt32";
                                        newEntry6.Source = "Channel1._Statistics._PendingReads";
                                        newEntry6.Name = "_PendingReads";
                                        
                                        var newEntry7 = new Object();
                                        newEntry7.ReadOnly = false;
                                        newEntry7.Description = undefined;
                                        newEntry7.BaseType = "INTEGER";
                                        newEntry7.SourceType = "System.UInt32";
                                        newEntry7.Source = "Channel1._Statistics._PendingWrites";
                                        newEntry7.Name = "_PendingWrites";
                                        
                                        var newEntry8 = new Object();
                                        newEntry8.ReadOnly = false;
                                        newEntry8.Description = undefined;
                                        newEntry8.BaseType = "BOOLEAN";
                                        newEntry8.SourceType = "System.Boolean";
                                        newEntry8.Source = "Channel1._Statistics._Reset";
                                        newEntry8.Name = "_Reset";
                                        
                                        var newEntry9 = new Object();
                                        newEntry9.ReadOnly = false;
                                        newEntry9.Description = undefined;
                                        newEntry9.BaseType = "INTEGER";
                                        newEntry9.SourceType = "System.UInt32";
                                        newEntry9.Source = "Channel1._Statistics._RxBytes";
                                        newEntry9.Name = "_RxBytes";
                                        
                                        var newEntry10 = new Object();
                                        newEntry10.ReadOnly = false;
                                        newEntry10.Description = undefined;
                                        newEntry10.BaseType = "INTEGER";
                                        newEntry10.SourceType = "System.UInt32";
                                        newEntry10.Source = "Channel1._Statistics._SuccessfulReads";
                                        newEntry10.Name = "_SuccessfulReads";
                                        
                                        var newEntry11 = new Object();
                                        newEntry11.ReadOnly = false;
                                        newEntry11.Description = undefined;
                                        newEntry11.BaseType = "INTEGER";
                                        newEntry11.SourceType = "System.UInt32";
                                        newEntry11.Source = "Channel1._Statistics._SuccessfulWrites";
                                        newEntry11.Name = "_SuccessfulWrites";
                                        
                                        var newEntry12 = new Object();
                                        newEntry12.ReadOnly = false;
                                        newEntry12.Description = undefined;
                                        newEntry12.BaseType = "INTEGER";
                                        newEntry12.SourceType = "System.UInt32";
                                        newEntry12.Source = "Channel1._Statistics._TxBytes";
                                        newEntry12.Name = "_TxBytes";
                                        
                                        result.AddRow(newEntry1);
                                        result.AddRow(newEntry2);
                                        result.AddRow(newEntry3);
                                        result.AddRow(newEntry4);
                                        result.AddRow(newEntry5);
                                        result.AddRow(newEntry6);
                                        result.AddRow(newEntry7);
                                        result.AddRow(newEntry8);
                                        result.AddRow(newEntry9);
                                        result.AddRow(newEntry10);
                                        result.AddRow(newEntry11);
                                        result.AddRow(newEntry12);
                                    }
                                    
                                    if(path == "Channel1._System") {
                                        var newEntry13 = new Object();
                                        newEntry13.ReadOnly = false;
                                        newEntry13.Description = "0;1";
                                        newEntry13.BaseType = "BOOLEAN";
                                        newEntry13.SourceType = "System.Boolean";
                                        newEntry13.Source = "Channel1._System._EnableDiagnostics";
                                        newEntry13.Name = "_EnableDiagnostics";
                                        
                                        var newEntry14 = new Object();
                                        newEntry14.ReadOnly = false;
                                        newEntry14.Description = "Replaced with zero/Unmodified";
                                        newEntry14.BaseType = "STRING";
                                        newEntry14.SourceType = "System.String";
                                        newEntry14.Source = "Channel1._System._FloatHandlingType";
                                        newEntry14.Name = "_FloatHandlingType";
                                        
                                        var newEntry15 = new Object();
                                        newEntry15.ReadOnly = false;
                                        newEntry15.Description = "1-10";
                                        newEntry15.BaseType = "INTEGER";
                                        newEntry15.SourceType = "System.Int32";
                                        newEntry15.Source = "Channel1._System._WriteOptimizationDutyCycle";
                                        newEntry15.Name = "_WriteOptimizationDutyCycle";
                                        
                                        result.AddRow(newEntry13);
                                        result.AddRow(newEntry14);
                                        result.AddRow(newEntry15);
                                    }
                                    
                                    if(path == "Channel1.Device1") {
                                        var newEntry16 = new Object();
                                        newEntry16.ReadOnly = false;
                                        newEntry16.Description = "Ramping Read/Write tag used to verify client connection";
                                        newEntry16.BaseType = "INTEGER";
                                        newEntry16.SourceType = "System.UInt16";
                                        newEntry16.Source = "Channel1.Device1.Tag1";
                                        newEntry16.Name = "Tag1";
                                        
                                        var newEntry17 = new Object();
                                        newEntry17.ReadOnly = false;
                                        newEntry17.Description = "Constant Read/Write tag used to verify client connection";
                                        newEntry17.BaseType = "INTEGER";
                                        newEntry17.SourceType = "System.UInt16";
                                        newEntry17.Source = "Channel1.Device1.Tag2";
                                        newEntry17.Name = "Tag2";
                                        
                                        result.AddRow(newEntry16);
                                        result.AddRow(newEntry17);
                                    }
                                    
                                    if(path == "Channel1.Device1._System") {
                                        var newEntry18 = new Object();
                                        newEntry18.ReadOnly = false;
                                        newEntry18.Description = undefined;
                                        newEntry18.BaseType = "BOOLEAN";
                                        newEntry18.SourceType = "System.Boolean";
                                        newEntry18.Source = "Channel1.Device1._System._DemandPoll";
                                        newEntry18.Name = "_DemandPoll";
                                        
                                        var newEntry19 = new Object();
                                        newEntry19.ReadOnly = false;
                                        newEntry19.Description = undefined;
                                        newEntry19.BaseType = "STRING";
                                        newEntry19.SourceType = "System.String";
                                        newEntry19.Source = "Channel1.Device1._System._Description";
                                        newEntry19.Name = "_Description";
                                        
                                        var newEntry20 = new Object();
                                        newEntry20.ReadOnly = false;
                                        newEntry20.Description = "Driver dependent device ID";
                                        newEntry20.BaseType = "STRING";
                                        newEntry20.SourceType = "System.String";
                                        newEntry20.Source = "Channel1.Device1._System._DeviceId";
                                        newEntry20.Name = "_DeviceId";
                                        
                                        var newEntry21 = new Object();
                                        newEntry21.ReadOnly = false;
                                        newEntry21.Description = undefined;
                                        newEntry21.BaseType = "BOOLEAN";
                                        newEntry21.SourceType = "System.Boolean";
                                        newEntry21.Source = "Channel1.Device1._System._Enabled";
                                        newEntry21.Name = "_Enabled";
                                        
                                        var newEntry22 = new Object();
                                        newEntry22.ReadOnly = false;
                                        newEntry22.Description = undefined;
                                        newEntry22.BaseType = "BOOLEAN";
                                        newEntry22.SourceType = "System.Boolean";
                                        newEntry22.Source = "Channel1.Device1._System._Error";
                                        newEntry22.Name = "_Error";
                                        
                                        var newEntry23 = new Object();
                                        newEntry23.ReadOnly = false;
                                        newEntry23.Description = undefined;
                                        newEntry23.BaseType = "BOOLEAN";
                                        newEntry23.SourceType = "System.Boolean";
                                        newEntry23.Source = "Channel1.Device1._System._NoError";
                                        newEntry23.Name = "_NoError";
                                        
                                        var newEntry24 = new Object();
                                        newEntry24.ReadOnly = false;
                                        newEntry24.Description = undefined;
                                        newEntry24.BaseType = "STRING";
                                        newEntry24.SourceType = "System.String";
                                        newEntry24.Source = "Channel1.Device1._System._ScanMode";
                                        newEntry24.Name = "_ScanMode";
                                        
                                        var newEntry25 = new Object();
                                        newEntry25.ReadOnly = false;
                                        newEntry25.Description = undefined;
                                        newEntry25.BaseType = "INTEGER";
                                        newEntry25.SourceType = "System.UInt32";
                                        newEntry25.Source = "Channel1.Device1._System._ScanRateMs";
                                        newEntry25.Name = "_ScanRateMs";
                                        
                                        var newEntry26 = new Object();
                                        newEntry26.ReadOnly = false;
                                        newEntry26.Description = undefined;
                                        newEntry26.BaseType = "INTEGER";
                                        newEntry26.SourceType = "System.UInt32";
                                        newEntry26.Source = "Channel1.Device1._System._SecondsInError";
                                        newEntry26.Name = "_SecondsInError";
                                        
                                        var newEntry27 = new Object();
                                        newEntry27.ReadOnly = false;
                                        newEntry27.Description = undefined;
                                        newEntry27.BaseType = "BOOLEAN";
                                        newEntry27.SourceType = "SSystem.Boolean";
                                        newEntry27.Source = "Channel1.Device1._System._Simulated";
                                        newEntry27.Name = "_Simulated";
                                        
                                        result.AddRow(newEntry18);
                                        result.AddRow(newEntry19);
                                        result.AddRow(newEntry20);
                                        result.AddRow(newEntry21);
                                        result.AddRow(newEntry22);
                                        result.AddRow(newEntry23);
                                        result.AddRow(newEntry24);
                                        result.AddRow(newEntry25);
                                        result.AddRow(newEntry26);
                                        result.AddRow(newEntry27);
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
            </ServiceImplementations>
            <Subscriptions></Subscriptions>
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <InstanceRunTimePermissions></InstanceRunTimePermissions>
        </ThingShape>
    </ThingShapes>
</Entities>
