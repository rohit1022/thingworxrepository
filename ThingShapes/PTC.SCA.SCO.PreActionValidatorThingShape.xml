<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b222"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1053"
 universal="password">
    <ThingShapes>
        <ThingShape
         aspect.isEditableExtensionObject="false"
         aspect.isExtension="true"
         className=""
         description="Thing Shape that holds all the necessary properties and services for manipulating pre action validation {PTC.SCA.SCO.PreActionValidatorThingShape}"
         documentationContent=""
         homeMashup=""
         lastModifiedDate="2020-03-30T21:09:16.388+05:30"
         name="PTC.SCA.SCO.PreActionValidatorThingShape"
         projectName=""
         tags="PTC:OA;PTC:sco-common-layer">
            <PropertyDefinitions></PropertyDefinitions>
            <ServiceDefinitions>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="EnumerationValidation">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="INFOTABLE"
                         description=""
                         name="EnumerationInfoTable"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="Value"
                         ordinal="2"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="PreCreateAction">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="PreDeleteAction">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="PreUpdateAction">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="ShiftPreCreate">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="ShiftPreUpdate">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="SitePreCreate">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="SitePreUpdate">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="ValidateFields">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="ErrorMessage"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         baseType="JSON"
                         description=""
                         name="FieldNames"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="RegularExpression"
                         ordinal="3"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="ValidateTimeFields">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="JSON"
                         description=""
                         name="FieldNames"
                         ordinal="2"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="ValidateTimeZoneFields">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="JSON"
                         description=""
                         name="FieldNames"
                         ordinal="2"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="ValidateWorkDefinitionExecutionStatus">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="WorkActivityPreCreate">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="WorkActivityPreUpdate">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="WorkDefinitionPreCreate">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="WorkDefinitionPreUpdate">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.DataChange"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="DataChanges"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
            </ServiceDefinitions>
            <EventDefinitions></EventDefinitions>
            <ServiceMappings></ServiceMappings>
            <ServiceImplementations>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="EnumerationValidation">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    if(EnumerationInfoTable !== null){
                                        var params = {
                                            table: EnumerationInfoTable
                                        };
                                        var EnumerationInfoTableJSON = Resources["InfoTableFunctions"].ToJSON(params);
                                        if(logger.debugEnabled){
                                            logger.debug("EnumerationValidation - Enumeration: " + JSON.stringify(EnumerationInfoTableJSON));
                                        }
                                    }
                                    
                                    if (typeof Value !== "undefined" && EnumerationInfoTable && EnumerationInfoTable.rows && EnumerationInfoTable.rows.length > 0){
                                        var row = EnumerationInfoTable.Find({UID:Value});
                                        if(row !== null){
                                            logger.debug("EnumerationValidation - Enumeration UID: " + Value + " is valid. Value is: " + row.Name);
                                        }else{
                                            logger.error("EnumerationValidation - Invalid Work Definition Execution Status: " + Value);
                                            throw "Invalid Work Definition Execution Status: " + Value;
                                        }
                                    }else{
                                        logger.debug("EnumerationValidation - Enumeration UID is empty. This is valid.");
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="PreCreateAction">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        table: DataChanges
                                    };
                                    var datasJSON = Resources["InfoTableFunctions"].ToJSON(params);
                                    var action = "Create";
                                    if(logger.debugEnabled){
                                        logger.debug("PreCreateAction service: " + action + " datas: " + JSON.stringify(datasJSON));
                                    }
                                    
                                    me.CallServices({
                                    	DataChanges: DataChanges
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="PreDeleteAction">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        table: DataChanges
                                    };
                                    var datasJSON = Resources["InfoTableFunctions"].ToJSON(params);
                                    var action = "Delete";
                                    if(logger.debugEnabled){
                                        logger.debug("PreDeleteAction service: " + action + " datas: " + JSON.stringify(datasJSON));
                                    }
                                    
                                    me.CallServices({
                                    	DataChanges: DataChanges
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="PreUpdateAction">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        table: DataChanges
                                    };
                                    var datasJSON = Resources["InfoTableFunctions"].ToJSON(params);
                                    var action = "Update";
                                    if(logger.debugEnabled){
                                        logger.debug("PreUpdateAction service: " + action + " datas: " + JSON.stringify(datasJSON));
                                    }
                                    
                                    me.CallServices({
                                    	DataChanges: DataChanges
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="ShiftPreCreate">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    logger.debug("ShiftPreCreate service");
                                    me.ValidateTimeFields({
                                    	DataChanges: DataChanges,
                                    	FieldNames: ["StartTime","EndTime"]
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="ShiftPreUpdate">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    logger.debug("ShiftPreUpdate service");
                                    me.ValidateTimeFields({
                                    	DataChanges: DataChanges,
                                    	FieldNames: ["StartTime","EndTime"]
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="SitePreCreate">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    logger.debug("SitePreCreate service");
                                    me.ValidateTimeZoneFields({
                                    	DataChanges: DataChanges,
                                    	FieldNames: ["TimeZone"]
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="SitePreUpdate">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    logger.debug("SitePreUpdate service");
                                    me.ValidateTimeZoneFields({
                                    	DataChanges: DataChanges,
                                    	FieldNames: ["TimeZone"]
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="ValidateFields">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var fieldNameArray = [];
                                    if (FieldNames) {
                                    	var jsonObject = JSON.parse(FieldNames);
                                    	if (jsonObject && jsonObject.array && Array.isArray(jsonObject.array)) {
                                    		fieldNameArray = jsonObject.array;
                                    	}
                                    }
                                    if (DataChanges) {
                                    	var datasJSON = Resources["InfoTableFunctions"].ToJSON({
                                    		table: DataChanges
                                    	});
                                    	if (logger.debugEnabled) {
                                    		logger.debug("ValidateFields - datas: " + JSON.stringify(datasJSON));
                                    		logger.debug("FieldNames: " + JSON.stringify(fieldNameArray));
                                            logger.debug("Regular Expression: " + RegularExpression);
                                    	}
                                    }
                                    
                                    var dataChangeLength = DataChanges.rows.length;
                                    for (var dataChangeCounter = 0; dataChangeCounter < dataChangeLength; dataChangeCounter++) {
                                    	var row = DataChanges.rows[dataChangeCounter];
                                    	if (row.Values && row.Values.rows) {
                                    		var valuesLength = row.Values.rows.length;
                                    		for (var valueCounter = 0; valueCounter < valuesLength; valueCounter++) {
                                    			var data = row.Values.rows[valueCounter];
                                    			var fieldLength = fieldNameArray.length;
                                    			for (var fieldCounter = 0; fieldCounter < fieldLength; fieldCounter++) {
                                    				validate(row.DataShapeName, data, fieldNameArray[fieldCounter]);
                                    			}
                                    		}
                                    	}
                                    }
                                    
                                    function validate(dataShape, data, fieldName) {
                                    	var value = data[fieldName];
                                    	logger.debug("ValidateField - " + dataShape + "-" + fieldName + ":" + value);
                                    	if (typeof value != "undefined") {
                                    		//logger.debug("ValidateField - " + dataShape + "-" + fieldName + ":" + value);
                                            var regex = RegExp(RegularExpression);
                                    		var test = regex.test(value);
                                    		if (!test) {
                                    			if(ErrorMessage){
                                    				throw ErrorMessage;
                                    			} else {
                                    			throw "Invalid format: " + dataShape + "-" + fieldName + ":" + value + " format is " + RegularExpression;
                                    			}
                                    		}
                                    	}// else {
                                    		//logger.debug("ValidateTimeField - " + dataShape + "-" + fieldName + ":");
                                    		//throw "Invalid time format: " + dataShape + "-" + fieldName + ":" + time + " format is HH:mm from 00:00 to 24:00";
                                    	//}
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="ValidateTimeFields">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    me.ValidateFields({
                                    	DataChanges: DataChanges,
                                    	FieldNames: FieldNames,
                                    	RegularExpression: "^((([01][0-9]|2[0-3]):[0-5][0-9])|24:00)$",
                                    	ErrorMessage: "Invalid time format: " + FieldNames.array + ": Expected value format is HH:mm from 00:00 to 24:00"
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="ValidateTimeZoneFields">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    me.ValidateFields({
                                    	DataChanges: DataChanges,
                                    	FieldNames: FieldNames,
                                    	RegularExpression: "^(-0\\d|-1[0-2]|\\+0\\d|\\+1[0-4]):(00|30|45)$",
                                    	ErrorMessage: "Invalid time format: " + FieldNames.array + ": Expected value format is -00:00 to -12:00 or +00:00 to +14:00"
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="ValidateWorkDefinitionExecutionStatus">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    if (DataChanges) {
                                    	var params = {
                                    		table: DataChanges
                                    	};
                                    	var datasJSON = Resources["InfoTableFunctions"].ToJSON(params);
                                    	if (logger.debugEnabled) {
                                    		logger.debug("ValidateWorkDefinitionExecutionStatus - WorkDefinition datas: " + JSON.stringify(datasJSON));
                                    	}
                                    }
                                    
                                    var getProductionOrderManager = function() {
                                    	return Things["PTC.Factory.LaunchPointConfigurationThing"].GetProductionOrderManagerThingName();
                                    };
                                    
                                    if (DataChanges.rows) {
                                    	var executionStatusTableInfo = Things[getProductionOrderManager()].GetWorkDefinitionExecutionStatuses();
                                    	var tableLength = DataChanges.rows.length;
                                    	for (var x = 0; x < tableLength; x++) {
                                    		var data = DataChanges.rows[x];
                                    		if (data.Values && data.Values.rows) {
                                    			var valuesLength = data.Values.rows.length;
                                    			for (var y = 0; y < valuesLength; y++) {
                                    				var workDefinition = data.Values.rows[y];
                                    				if (typeof workDefinition['ExecutionStatus'] != "undefined") {
                                    					logger.debug("ValidateWorkDefinitionExecutionStatus - WorkDefinition ExecutionStatus UID:" + workDefinition.ExecutionStatus);
                                    					me.EnumerationValidation({
                                    						Value: workDefinition.ExecutionStatus,
                                    						EnumerationInfoTable: executionStatusTableInfo
                                    					});
                                    				} else {
                                    					logger.debug("ValidateWorkDefinitionExecutionStatus - Skipping validation - WorkDefinition ExecutionStatus UID:");
                                    				}
                                    			}
                                    		}
                                    	}
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="WorkActivityPreCreate">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    logger.debug("WorkActivityPreCreate service");
                                    me.ValidateTimeFields({
                                    	DataChanges: DataChanges,
                                    	FieldNames: ["StartTime","EndTime"]
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="WorkActivityPreUpdate">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    logger.debug("WorkActivityPreUpdate service");
                                    me.ValidateTimeFields({
                                    	DataChanges: DataChanges,
                                    	FieldNames: ["StartTime","EndTime"]
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="WorkDefinitionPreCreate">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    logger.debug("WorkDefinitionPreCreate service");
                                    me.ValidateWorkDefinitionExecutionStatus({
                                        DataChanges: DataChanges
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="WorkDefinitionPreUpdate">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    logger.debug("WorkDefinitionPreUpdate service");
                                    me.ValidateWorkDefinitionExecutionStatus({
                                        DataChanges: DataChanges
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
            </ServiceImplementations>
            <Subscriptions></Subscriptions>
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="PTC.Factory.MachineVisibility"
                     type="Organization"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <InstanceRunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </InstanceRunTimePermissions>
        </ThingShape>
    </ThingShapes>
</Entities>
