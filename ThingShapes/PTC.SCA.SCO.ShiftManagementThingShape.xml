<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b222"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1053"
 universal="password">
    <ThingShapes>
        <ThingShape
         aspect.isEditableExtensionObject="false"
         aspect.isExtension="true"
         className=""
         description="Thing Shape that holds all the necessary properties and services for manipulating shift definitions in the database {PTC.SCA.SCO.ShiftManagementThingShape}"
         documentationContent=""
         homeMashup=""
         lastModifiedDate="2020-03-19T18:16:20.963+05:30"
         name="PTC.SCA.SCO.ShiftManagementThingShape"
         projectName="PTC.SCA.SCO.Common"
         tags="PTC:ThingShape;PTC:sca-sco-common">
            <PropertyDefinitions></PropertyDefinitions>
            <ServiceDefinitions>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Creates Shift records"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="CreateShifts">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.Shift"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="Shifts"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Creates ShiftSchedule records"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="CreateShiftSchedules">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftSchedule"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.ShiftSchedule"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="ShiftSchedules"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to create one or more Shift to Crew links"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="CreateShiftToCrewLinks">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToCrewLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.ShiftToCrewLink"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="ShiftToCrewLinks"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Create one or more Shift to WorkActivity records"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="CreateShiftToWorkActivityLinks">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToWorkActivityLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.ShiftToWorkActivityLink"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="ShiftToWorkActivityLinks"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to Create Site"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="CreateSites">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Site"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.Site"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="Sites"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to Create one or more Work Activity"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="CreateWorkActivities">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkActivity"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.WorkActivity"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="WorkActivities"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Deletes Shift"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="DeleteShift">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description="Shift UID"
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Delete the crew and all related links referencing the crew"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="DeleteShiftAndLinks">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.BatchDeleteDataShape"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="ShiftUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Deletes ShiftSchedule"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="DeleteShiftSchedule">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftSchedule"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description="Shift UID"
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to delete Shift to Crew Link"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="DeleteShiftToCrewLink">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToCrewLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Deletes Shift To WorkActivity Link based on given UID"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="DeleteShiftToWorkActivityLink">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToWorkActivityLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Delete Site based on UID"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="DeleteSite">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Site"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to Delete a Work Activity"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="DeleteWorkActivity">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkActivity"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Delete the crew and all related links referencing the crew"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="DeleteWorkActivityAndLinks">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.BatchDeleteDataShape"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkActivityUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Retrieves all crews from all shifts for the specified work activity UID."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetCrewsByWorkActivity">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Crew"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkActivityUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Returns the information for the current shift for the specified schedule ID. If no schedule ID is specified, the service looks at the default schedule. Used for calculations, such as KPI and status calculations."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetCurrentShiftInfoFromShiftSchedule">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="ShiftScheduleUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Return the shift for the schedule Id that the time range include now."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetCurrentShiftsFromShiftSchedule">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="ShiftScheduleUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShift">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Retrieves a list of all crews related to the specified shift UID through shift-to-crew links."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftCrews">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Crew"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="ShiftUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Creates Shift and Shift_AP Tables in the Database"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftDBInfo">
                    <ResultType
                     baseType="JSON"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions></ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Returns shift records based on given filter. Used internally by other services, not intended for standalone use."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftInfo">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.TimeInfo"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="DATETIME"
                         description=""
                         name="date"
                         ordinal="3"></FieldDefinition>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.Shift"
                         baseType="INFOTABLE"
                         description=""
                         name="shifts"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="ShiftScheduleUID"
                         ordinal="2"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Returns the information for the current shift for the specified schedule ID. If no schedule ID is specified, the service looks at the default schedule. Used for calculations, such as KPI and status calculations."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftInfoFromShiftSchedule">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="DATETIME"
                         description=""
                         name="date"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="ShiftScheduleUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Returns shift records based on given filter"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShifts">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="JSON"
                         description=""
                         name="filter"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="limit"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="offset"
                         ordinal="3"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Retrieves all shifts for the specified work activity UID."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftsByWorkActivity">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkActivityUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Retreive ShiftSchedule uisng UID"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftSchedule">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftSchedule"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Returns schedule records based on given filter"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftSchedules">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftSchedule"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="JSON"
                         description=""
                         name="filter"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="limit"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="offset"
                         ordinal="3"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Return the Shift for the specified ShiftSchedule Id and date time."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftsFromShiftSchedule">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="ShiftScheduleUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Return the Shift for the specified ShiftSchedule Id and date time."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftsFromShiftScheduleForTime">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="false"
                         baseType="DATETIME"
                         description="Shift time in format HH:MM"
                         name="DateTime"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="ShiftScheduleUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to get Shift to Crew Link"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftToCrewLink">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToCrewLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Retrieves a list of all shift-to-crew links related to the specified shift UID."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftToCrewLinks">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToCrewLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="ShiftUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Retrieves all shifts to crew link for the specified crew UID."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftToCrewLinksByCrew">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToCrewLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="CrewUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Returns Shift To WorkActivity Link record based on given UID"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftToWorkActivityLink">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToWorkActivityLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Retrieves all shift to work activity links related to the specified shift UID."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftToWorkActivityLinks">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToWorkActivityLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="ShiftUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Retrieves all shifts to crew link for the specified crew UID."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetShiftToWorkActivityLinksByWorkActivity">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToWorkActivityLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="WorkActivityUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Get Site by UID"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetSite">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Site"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Get Sites"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetSites">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Site"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="JSON"
                         description=""
                         name="filter"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="limit"
                         ordinal="3"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="offset"
                         ordinal="2"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetTimeZoneFromShiftSchedule">
                    <ResultType
                     baseType="STRING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="STRING"
                         description=""
                         name="ShiftScheduleUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to Get Work Activity based on a filter"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetWorkActivities">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkActivity"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="JSON"
                         description=""
                         name="filter"
                         ordinal="1"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="limit"
                         ordinal="2"></FieldDefinition>
                        <FieldDefinition
                         baseType="INTEGER"
                         description=""
                         name="offset"
                         ordinal="3"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Retrieves all work activities for the specified shift UID."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetWorkActivitiesByShift">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkActivity"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="ShiftUID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to Get a Work Activity"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="GetWorkActivity">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkActivity"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.isRequired="true"
                         baseType="STRING"
                         description=""
                         name="UID"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description=""
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="UpdateShifts">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Shift"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.Shift"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="Shifts"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Update schedules"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="UpdateShiftSchedules">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftSchedule"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.ShiftSchedule"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="ShiftSchedules"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to update Shift to Crew Link"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="UpdateShiftToCrewLinks">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToCrewLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.ShiftToCrewLink"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="ShiftToCrewLinks"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Updates one or more Shift to WorkActivity Link records"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="UpdateShiftToWorkActivityLinks">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.ShiftToWorkActivityLink"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.ShiftToWorkActivityLink"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="ShiftToWorkActivityLinks"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Update Site Table"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="UpdateSites">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.Site"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.Site"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="Sites"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category=""
                 description="Service to update Work Activity"
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="UpdateWorkActivities">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.WorkActivity"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.WorkActivity"
                         aspect.isRequired="true"
                         baseType="INFOTABLE"
                         description=""
                         name="WorkActivities"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
            </ServiceDefinitions>
            <EventDefinitions></EventDefinitions>
            <ServiceMappings></ServiceMappings>
            <ServiceImplementations>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="CreateShifts">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        infoTable: Shifts,
                                        dataShapeName: "PTC.SCA.SCO.Shift"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Insert(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="CreateShiftSchedules">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        infoTable: ShiftSchedules,
                                        dataShapeName: "PTC.SCA.SCO.ShiftSchedule"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Insert(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="CreateShiftToCrewLinks">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	infoTable: ShiftToCrewLinks,
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToCrewLink"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Insert(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="CreateShiftToWorkActivityLinks">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	infoTable: ShiftToWorkActivityLinks,
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Insert(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="CreateSites">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        infoTable: Sites,
                                        dataShapeName: "PTC.SCA.SCO.Site"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Insert(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="CreateWorkActivities">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	infoTable: WorkActivities,
                                    	dataShapeName: "PTC.SCA.SCO.WorkActivity"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Insert(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="DeleteShift">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        UID: UID,
                                        dataShapeName: "PTC.SCA.SCO.Shift"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Delete(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="DeleteShiftAndLinks">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var shiftToCrewLinks = me.GetShiftToCrewLinks({
                                    	ShiftUID: ShiftUID
                                    });
                                    
                                    var primaryKeyName = Things[me.GetDatabaseThingName()].GetPrimaryKey({
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToCrewLink"
                                    });
                                    
                                    var batchDeleteTable = me.AddEntitiesToBatchDelete({
                                    	DataShapeName: "PTC.SCA.SCO.ShiftToCrewLink",
                                    	Entities: shiftToCrewLinks,
                                    	BatchDeleteTable: undefined,
                                        PrimaryKeyName: primaryKeyName
                                    });
                                    
                                    var shiftToWorkActivityLinks = me.GetShiftToWorkActivityLinks({
                                    	ShiftUID: ShiftUID
                                    });
                                    
                                    primaryKeyName = Things[me.GetDatabaseThingName()].GetPrimaryKey({
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink"
                                    });
                                    
                                    batchDeleteTable = me.AddEntitiesToBatchDelete({
                                    	DataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    	Entities: shiftToWorkActivityLinks,
                                    	BatchDeleteTable: batchDeleteTable,
                                        PrimaryKeyName: primaryKeyName
                                    });
                                    
                                    var shiftRow = {};
                                    shiftRow.dataShapeName = "PTC.SCA.SCO.Shift";
                                    shiftRow.UID = ShiftUID;
                                    batchDeleteTable.AddRow(shiftRow);
                                    
                                    var result = Things[me.GetDatabaseThingName()].BatchDelete({
                                    	infoTable: batchDeleteTable
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="DeleteShiftSchedule">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        UID: UID,
                                        dataShapeName: "PTC.SCA.SCO.ShiftSchedule"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Delete(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="DeleteShiftToCrewLink">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	UID: UID,
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToCrewLink"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Delete(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="DeleteShiftToWorkActivityLink">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	UID: UID,
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Delete(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="DeleteSite">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        UID: UID,
                                        dataShapeName: "PTC.SCA.SCO.Site"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Delete(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="DeleteWorkActivity">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	UID: UID,
                                    	dataShapeName: "PTC.SCA.SCO.WorkActivity"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Delete(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="DeleteWorkActivityAndLinks">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var shiftToWorkActivityLinks = me.GetShiftToWorkActivityLinksByWorkActivity({
                                    	WorkActivityUID: WorkActivityUID
                                    });
                                    
                                    var primaryKeyName = Things[me.GetDatabaseThingName()].GetPrimaryKey({
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink"
                                    });
                                    
                                    var batchDeleteTable = me.AddEntitiesToBatchDelete({
                                    	DataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    	Entities: shiftToWorkActivityLinks,
                                    	BatchDeleteTable: undefined,
                                        PrimaryKeyName: primaryKeyName
                                    });
                                    
                                    var workActivityRow = {};
                                    workActivityRow.dataShapeName = "PTC.SCA.SCO.WorkActivity";
                                    workActivityRow.UID = WorkActivityUID;
                                    batchDeleteTable.AddRow(workActivityRow);
                                    
                                    var result = Things[me.GetDatabaseThingName()].BatchDelete({
                                    	infoTable: batchDeleteTable
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetCrewsByWorkActivity">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var filter = {
                                    	"filters": {
                                    		"dataShapeName": "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    		"fieldName": "WorkActivityUID",
                                    		"type": "EQ",
                                    		"value": WorkActivityUID
                                    	},
                                    	"joins": [{
                                    		"type": "INNER",
                                    		"sourceDataShapeName": "PTC.SCA.SCO.Crew",
                                    		"sourceFieldName": "UID",
                                    		"targetDataShapeName": "PTC.SCA.SCO.ShiftToCrewLink",
                                    		"targetFieldName": "CrewUID"
                                    	}, {
                                    		"type": "INNER",
                                    		"sourceDataShapeName": "PTC.SCA.SCO.ShiftToCrewLink",
                                    		"sourceFieldName": "ShiftUID",
                                    		"targetDataShapeName": "PTC.SCA.SCO.Shift",
                                    		"targetFieldName": "UID"
                                    	}, {
                                    		"type": "INNER",
                                    		"sourceDataShapeName": "PTC.SCA.SCO.Shift",
                                    		"sourceFieldName": "UID",
                                    		"targetDataShapeName": "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    		"targetFieldName": "ShiftUID"
                                    	}]
                                    };
                                    
                                    var params = {
                                    	filter: filter,
                                    	dataShapeName: "PTC.SCA.SCO.Crew"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetCurrentShiftInfoFromShiftSchedule">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var currentDate = new Date();
                                    var result = me.GetShiftInfoFromShiftSchedule({
                                        ShiftScheduleUID: ShiftScheduleUID,
                                        date: currentDate
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetCurrentShiftsFromShiftSchedule">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var myLogger = logger.getLoggerContext().getLogger(logger.getName()+".com.ptc.sca.sco.ShiftManagementThingShape");
                                    var now = new Date();
                                    myLogger.debug("GetCurrentShiftsFromShiftSchedule Current Date:" + now);
                                    
                                    var result = me.GetShiftsFromShiftScheduleForTime({
                                        DateTime: now,
                                        ShiftScheduleUID: ShiftScheduleUID
                                    });
                                    
                                    if (myLogger.isDebugEnabled()){
                                    	myLogger.debug("shifts:" + result.ToJSON());
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShift">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        UID: UID,
                                        dataShapeName: "PTC.SCA.SCO.Shift"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].GetEntity(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftCrews">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var filter = {
                                    	"filters": {
                                    		"dataShapeName": "PTC.SCA.SCO.ShiftToCrewLink",
                                    		"fieldName": "ShiftUID",
                                    		"type": "EQ",
                                    		"value": ShiftUID
                                    	},
                                    	"joins": [{
                                    		"type": "INNER",
                                    		"sourceDataShapeName": "PTC.SCA.SCO.Crew",
                                    		"sourceFieldName": "UID",
                                    		"targetDataShapeName": "PTC.SCA.SCO.ShiftToCrewLink",
                                    		"targetFieldName": "CrewUID"
                                    	}]
                                    };
                                    
                                    var params = {
                                    	filter: filter,
                                    	dataShapeName: "PTC.SCA.SCO.Crew"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftDBInfo">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var dbInfo = {
                                    	dbInfo: [{
                                    			dataShapeName: "PTC.SCA.SCO.Shift",
                                    			indexedFields: [{
                                    				name: "SiteUID"
                                    			}, {
                                    				name: "ShiftScheduleUID"
                                    			}],
                                    			foreignKeys: [{
                                    				name: "SiteUID",
                                    				referenceDataShapeName: "PTC.SCA.SCO.Site",
                                    				referenceFieldName: "UID"
                                    			}, {
                                    				name: "ShiftScheduleUID",
                                    				referenceDataShapeName: "PTC.SCA.SCO.ShiftSchedule",
                                    				referenceFieldName: "UID"
                                    			}]
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.Shift_AP",
                                    			indexedFields: []
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.Site",
                                    			indexedFields: [{
                                    				name: "ID",
                                    				unique: true
                                    			}]
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.Site_AP",
                                    			indexedFields: []
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.ShiftToCrewLink",
                                    			indexedFields: [{
                                    				name: "ShiftUID"
                                    			}, {
                                    				name: "CrewUID"
                                    			}],
                                    			foreignKeys: [{
                                    				name: "ShiftUID",
                                    				referenceDataShapeName: "PTC.SCA.SCO.Shift",
                                    				referenceFieldName: "UID"
                                    			}, {
                                    				name: "CrewUID",
                                    				referenceDataShapeName: "PTC.SCA.SCO.Crew",
                                    				referenceFieldName: "UID"
                                    			}],
                                    			fields: [{
                                    				name: "ShiftUID",
                                    				notNull: true
                                    			}, {
                                    				name: "CrewUID",
                                    				notNull: true
                                    			}]
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.ShiftToCrewLink_AP",
                                    			indexedFields: []
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.WorkActivity",
                                    			indexedFields: [{
                                    				name: "SiteUID"
                                    			}],
                                    			foreignKeys: [{
                                    				name: "SiteUID",
                                    				referenceDataShapeName: "PTC.SCA.SCO.Site",
                                    				referenceFieldName: "UID"
                                    			}]
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.WorkActivity_AP",
                                    			indexedFields: []
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.ShiftSchedule",
                                    			indexedFields: [{
                                    				name: "ID"
                                    			}, {
                                    				name: "SiteUID"
                                    			}],
                                    			foreignKeys: [{
                                    				name: "SiteUID",
                                    				referenceDataShapeName: "PTC.SCA.SCO.Site",
                                    				referenceFieldName: "UID"
                                    			}]
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.ShiftSchedule_AP",
                                    			indexedFields: []
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    			indexedFields: [{
                                    				name: "ShiftUID"
                                    			}, {
                                    				name: "WorkActivityUID"
                                    			}],
                                    			foreignKeys: [{
                                    				name: "ShiftUID",
                                    				referenceDataShapeName: "PTC.SCA.SCO.Shift",
                                    				referenceFieldName: "UID"
                                    			}, {
                                    				name: "WorkActivityUID",
                                    				referenceDataShapeName: "PTC.SCA.SCO.WorkActivity",
                                    				referenceFieldName: "UID"
                                    			}],
                                    			fields: [{
                                    				name: "ShiftUID",
                                    				notNull: true
                                    			}, {
                                    				name: "WorkActivityUID",
                                    				notNull: true
                                    			}]
                                    		},
                                    		{
                                    			dataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink_AP",
                                    			indexedFields: []
                                    		}
                                    	]
                                    };
                                    
                                    var result = dbInfo;
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftInfo">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var customLogger = logger.getLoggerContext().getLogger(logger.getName() + ".com.ptc.sca.sco.ShiftManagementThingShape");
                                    var params = {
                                    	infoTableName: "InfoTable",
                                    	dataShapeName: "PTC.SCA.SCO.TimeInfo"
                                    };
                                    
                                    var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                    var tableLength = shifts.rows.length;
                                    var offset = timeStringToFloat(me.GetTimeZoneFromShiftSchedule({
                                    	ShiftScheduleUID: ShiftScheduleUID
                                    }));
                                    
                                    var actual_offset_hour = -date.getTimezoneOffset() / 60;
                                    customLogger.debug("actual_offset_hour:" + actual_offset_hour);
                                    if (offset == undefined) {
                                        offset = actual_offset_hour;
                                    }
                                    customLogger.debug("time zone:" + offset);
                                    
                                    var calDate = getDate(date, offset);
                                    customLogger.debug("time zone date:" + calDate);
                                    
                                    for (var x = 0; x < tableLength; x++) {
                                    	var currentShift = shifts.getRow(x);
                                    	if (customLogger.isDebugEnabled()) {
                                    		customLogger.debug("currentShift:" + currentShift.toJSON());
                                    		customLogger.debug("offset:" + offset);
                                    	}
                                    	var startDateDayOffset = 0;
                                    	var endDateDayOffset = 0;
                                    	if (currentShift.EndTime < currentShift.StartTime) {
                                    		var hours = pad(calDate.getHours(), 2);
                                    		var minutes = pad(calDate.getMinutes(), 2);
                                    		var time = hours + ":" + minutes;
                                    		customLogger.debug("time:" + time);
                                    		if (time >= currentShift.StartTime) {
                                    			endDateDayOffset = 24;
                                    		}
                                    		if (time < currentShift.EndTime) {
                                    			startDateDayOffset = -24;
                                    		}
                                    	}
                                    	var startDate = getDateFromTimeString(new Date(date.getTime()), currentShift.StartTime, startDateDayOffset, actual_offset_hour - offset);
                                    	customLogger.debug("start date:" + startDate);
                                    	var endDate = getDateFromTimeString(new Date(date.getTime()), currentShift.EndTime, endDateDayOffset, actual_offset_hour - offset);
                                    	customLogger.debug("end date:" + endDate);
                                    	var duration = dateDifference(endDate, startDate);
                                    	currentShift.Duration = duration; // INTEGER
                                    	currentShift.GeneratedID = getID(currentShift.UID, startDate); // String [Primary Key]
                                    	currentShift.ShiftUID = currentShift.UID;
                                    	currentShift.StartTimeDate = startDate; // DATETIME
                                    	currentShift.EndTimeDate = endDate; // DATETIME
                                    
                                        if (ShiftScheduleUID) {
                                            currentShift.ShiftScheduleUID = ShiftScheduleUID;
                                        }
                                    
                                        customLogger.debug(currentShift);
                                    	result.AddRow(currentShift);
                                    }
                                    
                                    function getID(uid, startDate) {
                                    	return uid + "-" + dateFormat(startDate, "YYYY-MM-dd_HH:mm");
                                    }
                                    
                                    function getDateFromTimeString(date, time, dayOffset, actual_offset_hour) {
                                    	var hour = time.trim().split(":")[0];
                                    	var minute = time.trim().split(":")[1];
                                    	date.setHours(hour);
                                    	date.setHours(date.getHours() + dayOffset + actual_offset_hour);
                                    	date.setMinutes(minute);
                                    	date.setSeconds(0);
                                    	date.setMilliseconds(0);
                                    	return date;
                                    }
                                    
                                    function getDate(date, offset) {
                                    	if (offset !== undefined) {
                                    		var utc = date.getTime() + (date.getTimezoneOffset() * 60000);
                                    		var nd = new Date(utc + (3600000 * offset));
                                    		return nd;
                                    	}
                                    	return new Date(date.getTime());
                                    }
                                    
                                    function timeStringToFloat(time) {
                                    	if (time) {
                                    		customLogger.debug("timeStringToFloat time:" + time);
                                    		var hoursMinutes = time.split(/[.:]/);
                                    		var hours = parseInt(hoursMinutes[0], 10);
                                    		customLogger.debug("timeStringToFloat hours:" + hours);
                                    		var minutes = hoursMinutes[1] ? parseInt(hoursMinutes[1], 10) : 0;
                                    		customLogger.debug("timeStringToFloat minutes:" + minutes);
                                    		var offset = 0;
                                    		if (time.startsWith("-")) {
                                    			offset = hours - minutes / 60;
                                    		} else {
                                    			offset = hours + minutes / 60;
                                    		}
                                    		customLogger.debug("timeStringToFloat offset:" + offset);
                                    		return offset;
                                    	}
                                    }
                                    
                                    function pad(num, size) {
                                    	var s = num + "";
                                    	while (s.length < size) s = "0" + s;
                                    	return s;
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftInfoFromShiftSchedule">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var shifts = me.GetShiftsFromShiftScheduleForTime({
                                    	ShiftScheduleUID: ShiftScheduleUID,
                                    	DateTime: date
                                    });
                                    
                                    var result = me.GetShiftInfo({
                                    	shifts: shifts,
                                    	ShiftScheduleUID: ShiftScheduleUID,
                                    	date: date
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShifts">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        filter: filter,
                                        dataShapeName: "PTC.SCA.SCO.Shift",
                                        limit: limit,
                                        offset: offset
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftsByWorkActivity">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var filter = {
                                    	"filters": {
                                    		"dataShapeName": "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    		"fieldName": "WorkActivityUID",
                                    		"type": "EQ",
                                    		"value": WorkActivityUID
                                    	},
                                    	"joins": [{
                                    		"type": "INNER",
                                    		"sourceDataShapeName": "PTC.SCA.SCO.Shift",
                                    		"sourceFieldName": "UID",
                                    		"targetDataShapeName": "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    		"targetFieldName": "ShiftUID"
                                    	}]
                                    };
                                    
                                    var params = {
                                    	filter: filter,
                                    	dataShapeName: "PTC.SCA.SCO.Shift"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftSchedule">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        UID: UID,
                                        dataShapeName: "PTC.SCA.SCO.ShiftSchedule"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].GetEntity(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftSchedules">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        filter: filter,
                                        dataShapeName: "PTC.SCA.SCO.ShiftSchedule",
                                        limit: limit,
                                        offset: offset
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftsFromShiftSchedule">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var filter = {
                                    	filters: {
                                    		filters: [],
                                    		type: "AND"
                                    	}
                                    };
                                    
                                    if (ShiftScheduleUID) {
                                    	var UIDFilter = {
                                    		dataShapeName: "PTC.SCA.SCO.ShiftSchedule",
                                    		fieldName: "UID",
                                    		type: "EQ",
                                    		value: ShiftScheduleUID
                                    	};
                                    	filter.filters.filters.push(UIDFilter);
                                    	filter.joins = [{
                                    		type: "INNER",
                                    		sourceDataShapeName: "PTC.SCA.SCO.Shift",
                                    		sourceFieldName: "ShiftScheduleUID",
                                    		targetDataShapeName: "PTC.SCA.SCO.ShiftSchedule",
                                    		targetFieldName: "UID"
                                    	}];
                                    } else {
                                    	var shiftScheduleUIDFilter = {
                                    		dataShapeName: "PTC.SCA.SCO.Shift",
                                    		fieldName: "ShiftScheduleUID",
                                    		type: "EQ",
                                    		value: undefined
                                    	};
                                    	filter.filters.filters.push(shiftScheduleUIDFilter);
                                    }
                                    
                                    var result = me.GetShifts({
                                    	filter: filter,
                                    	offset: undefined,
                                    	limit: undefined
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftsFromShiftScheduleForTime">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var myLogger = logger.getLoggerContext().getLogger(logger.getName()+".com.ptc.sca.sco.ShiftManagementThingShape");
                                    var offset = timeStringToFloat(me.GetTimeZoneFromShiftSchedule({
                                    	ShiftScheduleUID: ShiftScheduleUID /* STRING */
                                    }));
                                    
                                    myLogger.debug("	offset:" + offset);
                                    var date = getDate(DateTime, offset);
                                    myLogger.debug("	date with offset:" + date);
                                    
                                    var hours = pad(date.getHours(), 2);
                                    var minutes = pad(date.getMinutes(), 2);
                                    var time = hours + ":" + minutes;
                                    logger.debug("Time:" + time);
                                    
                                    var filter = {
                                    	filters: {
                                    		filters: [],
                                    		type: "AND"
                                    	}
                                    };
                                    
                                    if (ShiftScheduleUID) {
                                    	var UIDFilter = {
                                    		dataShapeName: "PTC.SCA.SCO.ShiftSchedule",
                                    		fieldName: "UID",
                                    		type: "EQ",
                                    		value: ShiftScheduleUID
                                    	};
                                    	filter.filters.filters.push(UIDFilter);
                                    	filter.joins = [{
                                    		type: "INNER",
                                    		sourceDataShapeName: "PTC.SCA.SCO.Shift",
                                    		sourceFieldName: "ShiftScheduleUID",
                                    		targetDataShapeName: "PTC.SCA.SCO.ShiftSchedule",
                                    		targetFieldName: "UID"
                                    	}];
                                    } else {
                                    	var shiftScheduleUIDFilter = {
                                    		dataShapeName: "PTC.SCA.SCO.Shift",
                                    		fieldName: "ShiftScheduleUID",
                                    		type: "EQ",
                                    		value: undefined
                                    	};
                                    	filter.filters.filters.push(shiftScheduleUIDFilter);
                                    }
                                    
                                    var shifts = me.GetShiftsFromShiftSchedule({
                                    	ShiftScheduleUID: ShiftScheduleUID
                                    });
                                    
                                    var result = me.CreateInfoTable({
                                    	dataShapeName: "PTC.SCA.SCO.Shift"
                                    });
                                    
                                    if (shifts && shifts.rows) {
                                    	var tableLength = shifts.rows.length;
                                    	for (var x = 0; x < tableLength; x++) {
                                    		var shift = shifts.rows[x];
                                    		if (shift.EndTime < shift.StartTime) {
                                    			if ((time < shift.StartTime && time < shift.EndTime) || (time >= shift.StartTime && time > shift.EndTime)) {
                                    				result.AddRow(shift);
                                    			}
                                    		} else {
                                    			if (time >= shift.StartTime && time < shift.EndTime) {
                                    				result.AddRow(shift);
                                    			}
                                    		}
                                    	}
                                    }
                                    
                                    function getDate(date, offset) {
                                        if (offset !== undefined) {
                                            var utc = date.getTime() + (date.getTimezoneOffset() * 60000);
                                            var nd = new Date(utc + (3600000 * offset));
                                            return nd;
                                        }
                                        return date;
                                    }
                                    
                                    function timeStringToFloat(time) {
                                        if (time) {
                                            myLogger.debug("time:" + time);
                                            var hoursMinutes = time.split(/[.:]/);
                                            var hours = parseInt(hoursMinutes[0], 10);
                                            var minutes = hoursMinutes[1] ? parseInt(hoursMinutes[1], 10) : 0;
                                            var offset = 0;
                                            if (time.startsWith("-")) {
                                                offset = hours - minutes / 60;
                                            } else {
                                                offset = hours + minutes / 60;
                                            }
                                            myLogger.debug("retrieving offset:" + offset);
                                            return offset;
                                        }
                                    }
                                    
                                    function pad(num, size) {
                                    	var s = num + "";
                                    	while (s.length < size) s = "0" + s;
                                    	return s;
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftToCrewLink">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	UID: UID,
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToCrewLink"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].GetEntity(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftToCrewLinks">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result = me.FindLinks({
                                    	DataShapeName: "PTC.SCA.SCO.ShiftToCrewLink",
                                    	FieldName: "ShiftUID",
                                    	FieldValue: ShiftUID
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftToCrewLinksByCrew">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    //Get All shift to crew links releted to the crew uid
                                    var result = me.FindLinks({
                                    	DataShapeName: "PTC.SCA.SCO.ShiftToCrewLink",
                                    	FieldName: "CrewUID",
                                    	FieldValue: CrewUID
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftToWorkActivityLink">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	UID: UID,
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].GetEntity(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftToWorkActivityLinks">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var result = me.FindLinks({
                                    	DataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    	FieldName: "ShiftUID",
                                    	FieldValue: ShiftUID
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetShiftToWorkActivityLinksByWorkActivity">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    //Get All shift to work activity links releted to the crew uid
                                    var result = me.FindLinks({
                                    	DataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    	FieldName: "WorkActivityUID",
                                    	FieldValue: WorkActivityUID
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetSite">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        UID: UID,
                                        dataShapeName: "PTC.SCA.SCO.Site"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].GetEntity(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetSites">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        filter: filter,
                                        dataShapeName: "PTC.SCA.SCO.Site",
                                        offset: offset,
                                        limit: limit
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetTimeZoneFromShiftSchedule">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var uid;
                                    if(ShiftScheduleUID){
                                        uid = ShiftScheduleUID;
                                    }
                                    
                                    var UIDFilter = {
                                    	"dataShapeName": "PTC.SCA.SCO.ShiftSchedule",
                                    	"fieldName": "UID",
                                    	"type": "EQ",
                                    	"value": uid
                                    };
                                    
                                    var filter = {
                                    	"filters": {
                                    		"filters": [UIDFilter],
                                    		"type": "AND"
                                    	},
                                    	"joins": [{
                                    		"type": "INNER",
                                    		"sourceDataShapeName": "PTC.SCA.SCO.Site",
                                    		"sourceFieldName": "UID",
                                    		"targetDataShapeName": "PTC.SCA.SCO.ShiftSchedule",
                                    		"targetFieldName": "SiteUID"
                                    	}]
                                    };
                                    
                                    var sites = me.GetSites({
                                    	filter: filter,
                                    	offset: undefined,
                                    	limit: undefined
                                    });
                                    
                                    var result = "";
                                    if (sites && sites.rows && sites.rows.length > 0) {
                                    	result = sites.rows[0].TimeZone;
                                    }
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetWorkActivities">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	filter: filter,
                                    	dataShapeName: "PTC.SCA.SCO.WorkActivity",
                                    	limit: limit,
                                    	offset: offset
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetWorkActivitiesByShift">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var filter = {
                                    	"filters": {
                                    		"dataShapeName": "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    		"fieldName": "ShiftUID",
                                    		"type": "EQ",
                                    		"value": ShiftUID
                                    	},
                                    	"joins": [{
                                    		"type": "INNER",
                                    		"sourceDataShapeName": "PTC.SCA.SCO.WorkActivity",
                                    		"sourceFieldName": "UID",
                                    		"targetDataShapeName": "PTC.SCA.SCO.ShiftToWorkActivityLink",
                                    		"targetFieldName": "WorkActivityUID"
                                    	}]
                                    };
                                    
                                    var params = {
                                    	filter: filter,
                                    	dataShapeName: "PTC.SCA.SCO.WorkActivity"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Query(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="GetWorkActivity">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	UID: UID,
                                    	dataShapeName: "PTC.SCA.SCO.WorkActivity"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].GetEntity(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="UpdateShifts">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        infoTable: Shifts,
                                        dataShapeName: "PTC.SCA.SCO.Shift"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Update(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="UpdateShiftSchedules">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        infoTable: ShiftSchedules,
                                        dataShapeName: "PTC.SCA.SCO.ShiftSchedule"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Update(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="UpdateShiftToCrewLinks">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	infoTable: ShiftToCrewLinks,
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToCrewLink"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Update(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="UpdateShiftToWorkActivityLinks">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	infoTable: ShiftToWorkActivityLinks,
                                    	dataShapeName: "PTC.SCA.SCO.ShiftToWorkActivityLink"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Update(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="UpdateSites">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                        infoTable: Sites,
                                        dataShapeName: "PTC.SCA.SCO.Site"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Update(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="UpdateWorkActivities">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	infoTable: WorkActivities,
                                    	dataShapeName: "PTC.SCA.SCO.WorkActivity"
                                    };
                                    
                                    var result = Things[me.GetDatabaseThingName()].Update(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
            </ServiceImplementations>
            <Subscriptions></Subscriptions>
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="PTC.Factory.MachineVisibility"
                     type="Organization"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <InstanceRunTimePermissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="FactoryUsers"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
            </InstanceRunTimePermissions>
        </ThingShape>
    </ThingShapes>
</Entities>
