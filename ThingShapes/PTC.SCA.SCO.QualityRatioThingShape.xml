<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b222"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1053"
 universal="password">
    <ThingShapes>
        <ThingShape
         aspect.isEditableExtensionObject="false"
         aspect.isExtension="true"
         className=""
         description="Thing Shape for the quality ratio KPI. {PTC.SCA.SCO.QualityRatioThingShape}"
         documentationContent=""
         homeMashup=""
         lastModifiedDate="2020-03-19T18:16:21.009+05:30"
         name="PTC.SCA.SCO.QualityRatioThingShape"
         projectName="PTC.SCA.SCO.KPI"
         tags="PTC:sca-sco-kpi">
            <PropertyDefinitions>
                <PropertyDefinition
                 aspect.cacheTime="0.0"
                 aspect.dataChangeType="VALUE"
                 aspect.isLogged="false"
                 aspect.isPersistent="true"
                 baseType="NUMBER"
                 category="KPIs"
                 description="Current value for the quality ratio KPI."
                 isLocalOnly="false"
                 name="QualityRatio_currentValue"
                 ordinal="3"></PropertyDefinition>
                <PropertyDefinition
                 aspect.cacheTime="0.0"
                 aspect.dataChangeType="VALUE"
                 aspect.defaultValue="1970-01-01T05:30:00.000+05:30"
                 aspect.isLogged="false"
                 aspect.isPersistent="true"
                 baseType="DATETIME"
                 category="KPIs"
                 description="Time when the quality ratio KPI was last calculated."
                 isLocalOnly="false"
                 name="QualityRatio_lastCalculatedTime"
                 ordinal="4"></PropertyDefinition>
                <PropertyDefinition
                 aspect.cacheTime="0.0"
                 aspect.dataChangeType="VALUE"
                 aspect.defaultValue="%"
                 aspect.isLogged="false"
                 aspect.isPersistent="true"
                 baseType="STRING"
                 category="KPIs"
                 description="Unit of measure for the quality ratio KPI. The default is %"
                 isLocalOnly="false"
                 name="QualityRatio_unitOfMeasure"
                 ordinal="4"></PropertyDefinition>
            </PropertyDefinitions>
            <ServiceDefinitions>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category="KPIs"
                 description="Retrieves the current value for the quality ratio KPI from the property."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="Get_QualityRatio_CurrentValue">
                    <ResultType
                     baseType="NUMBER"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions></ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category="KPIs"
                 description="Retrieves the threshold values for the value range into which the current value of the quality ratio KPI falls, including the low and high values, color assigned for the value range, and any additional properties."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="Get_QualityRatio_ThresholdValues">
                    <ResultType
                     aspect.dataShape="PTC.SCA.SCO.KPIThresholdValues"
                     baseType="INFOTABLE"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions></ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category="KPIs"
                 description="Returns the quality ratio KPI trend by calculating the difference between the current quality ratio value and the previously calculated quality ratio value."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="Get_QualityRatio_Trend">
                    <ResultType
                     baseType="NUMBER"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions></ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category="KPIs"
                 description="Calculates the quality ratio KPI."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="QualityRatio_Calculate">
                    <ResultType
                     baseType="NUMBER"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         aspect.dataShape="PTC.SCA.SCO.TimeInfo"
                         baseType="INFOTABLE"
                         description=""
                         name="TimeInfo"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
                <ServiceDefinition
                 aspect.isAsync="false"
                 category="KPIs"
                 description="Sets the current value for the quality ratio KPI."
                 isAllowOverride="true"
                 isLocalOnly="false"
                 isOpen="false"
                 isPrivate="false"
                 name="Set_QualityRatio_CurrentValue">
                    <ResultType
                     baseType="NOTHING"
                     description=""
                     name="result"
                     ordinal="0"></ResultType>
                    <ParameterDefinitions>
                        <FieldDefinition
                         baseType="NUMBER"
                         description=""
                         name="value"
                         ordinal="1"></FieldDefinition>
                    </ParameterDefinitions>
                </ServiceDefinition>
            </ServiceDefinitions>
            <EventDefinitions></EventDefinitions>
            <ServiceMappings></ServiceMappings>
            <ServiceImplementations>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="Get_QualityRatio_CurrentValue">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    result = me.QualityRatio_currentValue;
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="Get_QualityRatio_ThresholdValues">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    result = Things[me.GetKPIManager()].GetThresholdValues({
                                    	ownerName: me.name /* THINGNAME */,
                                    	kpiName: "QualityRatio" /* STRING */
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="Get_QualityRatio_Trend">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    result = Things[me.GetKPIManager()].GetTrend({
                                    	ownerName: me.name /* THINGNAME */,
                                    	kpiName: "QualityRatio" /* STRING */
                                    });
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="QualityRatio_Calculate">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    customLogger = logger.getLoggerContext().getLogger(logger.getName()+".com.ptc.sca.sco.KPICalculation.QualityRatio");
                                    
                                    var goodQuantity = me.goodQuantity_GQ;
                                    var producedQuantity = me.producedQuantity_PQ;
                                    var qualityRatio = 0;
                                    
                                    if (TimeInfo.getRowCount() > 0) {
                                        var row = TimeInfo.getRow(0);
                                        var generatedID = row.GeneratedID;
                                    
                                        // result from service GetKPIElementStartValue: INFOTABLE dataShape: "PTC.SCA.SCO.KPIElementValue"
                                        var goodQuantity_GQ_firstValue =   me.GetKPICacheValue({
                                            generatedID: generatedID /* STRING */,
                                            name: "goodQuantity_GQ_firstValue" /* STRING */
                                    	});
                                        var producedQuantity_PQ_firstValue =   me.GetKPICacheValue({
                                            generatedID: generatedID /* STRING */,
                                            name: "producedQuantity_PQ_firstValue" /* STRING */
                                    	});
                                    
                                        var producedTotalQuantity = 0;
                                        var producedTotalGoodQuantity = 0;
                                    
                                        if ((typeof producedQuantity_PQ_firstValue !== 'undefined') && (typeof goodQuantity_GQ_firstValue !== 'undefined')) {
                                            producedTotalQuantity = (producedQuantity - producedQuantity_PQ_firstValue);
                                            producedTotalGoodQuantity = (goodQuantity - goodQuantity_GQ_firstValue);
                                            if ( producedTotalQuantity === 0 ){
                                                // Until items are produced, quality ratio cannot be measured and will default to 1 so that OEE numbers are not negatively affected.
                                                // The logic does not handle count rollover use cases. When this happens and producedTotalQuantity is 0
                                                // with producedTotalGoodQuantity greater than 0, then the service will return 0.
                                                qualityRatio = producedTotalGoodQuantity > 0 ? 0: 1;
                                            }
                                            else {
                                                qualityRatio = producedTotalGoodQuantity / producedTotalQuantity;
                                            }
                                            customLogger.debug("QualityRatio_Calculate: produced quantity value when time info started - last produced quantity: " + producedQuantity_PQ_firstValue + "-" + producedQuantity);
                                            customLogger.debug("QualityRatio_Calculate: good quantity value when time info started - last good quantity: " + goodQuantity_GQ_firstValue + "-" + goodQuantity);
                                            customLogger.debug("QualityRatio_Calculate: produced Total Good Quantity / produced total quantity = quality ratio: " + producedTotalGoodQuantity+ " / " + producedTotalQuantity + " = " + qualityRatio);
                                        }
                                        else {
                                            customLogger.warn("QualityRatio_Calculate for " + me.name + " could not retrieve the good quantity or produced quantity at the start of the time info.");
                                        }
                                    }
                                    else {
                                        customLogger.warn("QualityRatio_Calculate for " + me.name + " could not retrieve the current time info. QualityRatio = 0.");
                                    }
                                    var result = qualityRatio;
                                    me.Set_QualityRatio_CurrentValue({
                                        value: result
                                    });
                                    var now = new Date();
                                    me.QualityRatio_lastCalculatedTime = now;
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation
                 description=""
                 handlerName="Script"
                 name="Set_QualityRatio_CurrentValue">
                    <ConfigurationTables>
                        <ConfigurationTable
                         description=""
                         isMultiRow="false"
                         name="Script"
                         ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     baseType="STRING"
                                     description="code"
                                     name="code"
                                     ordinal="0"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    me.QualityRatio_currentValue = value;
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
            </ServiceImplementations>
            <Subscriptions></Subscriptions>
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="PTC.Factory.MachineVisibility"
                     type="Organization"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="QualityRatio_currentValue"></AlertDefinitions>
                <AlertDefinitions
                 name="QualityRatio_lastCalculatedTime"></AlertDefinitions>
                <AlertDefinitions
                 name="QualityRatio_unitOfMeasure"></AlertDefinitions>
            </AlertConfigurations>
            <InstanceRunTimePermissions></InstanceRunTimePermissions>
        </ThingShape>
    </ThingShapes>
</Entities>
